class Task < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Task, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def summary: () -> String?

    def summary=: (String?) -> String?

    def summary?: () -> bool

    def summary_changed?: () -> bool

    def summary_change: () -> [ String?, String? ]

    def summary_will_change!: () -> void

    def summary_was: () -> String?

    def summary_previously_changed?: () -> bool

    def summary_previous_change: () -> Array[String?]?

    def summary_previously_was: () -> String?

    def summary_before_last_save: () -> String?

    def summary_change_to_be_saved: () -> Array[String?]?

    def summary_in_database: () -> String?

    def saved_change_to_summary: () -> Array[String?]?

    def saved_change_to_summary?: () -> bool

    def will_save_change_to_summary?: () -> bool

    def restore_summary!: () -> void

    def clear_summary_change: () -> void

    def due_date: () -> Date?

    def due_date=: (Date?) -> Date?

    def due_date?: () -> bool

    def due_date_changed?: () -> bool

    def due_date_change: () -> [ Date?, Date? ]

    def due_date_will_change!: () -> void

    def due_date_was: () -> Date?

    def due_date_previously_changed?: () -> bool

    def due_date_previous_change: () -> Array[Date?]?

    def due_date_previously_was: () -> Date?

    def due_date_before_last_save: () -> Date?

    def due_date_change_to_be_saved: () -> Array[Date?]?

    def due_date_in_database: () -> Date?

    def saved_change_to_due_date: () -> Array[Date?]?

    def saved_change_to_due_date?: () -> bool

    def will_save_change_to_due_date?: () -> bool

    def restore_due_date!: () -> void

    def clear_due_date_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def completed: () -> bool?

    def completed=: (bool?) -> bool?

    def completed?: () -> bool

    def completed_changed?: () -> bool

    def completed_change: () -> [ bool?, bool? ]

    def completed_will_change!: () -> void

    def completed_was: () -> bool?

    def completed_previously_changed?: () -> bool

    def completed_previous_change: () -> Array[bool?]?

    def completed_previously_was: () -> bool?

    def completed_before_last_save: () -> bool?

    def completed_change_to_be_saved: () -> Array[bool?]?

    def completed_in_database: () -> bool?

    def saved_change_to_completed: () -> Array[bool?]?

    def saved_change_to_completed?: () -> bool

    def will_save_change_to_completed?: () -> bool

    def restore_completed!: () -> void

    def clear_completed_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Task, Integer]
    include Enumerable[Task]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Task, Integer]
  end
end
